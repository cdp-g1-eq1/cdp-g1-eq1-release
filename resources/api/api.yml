swagger: '2.0'
info:
  title: Cdp-g1-eq1
  description: Api for cdp project.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.1
tags:
  - name: Authentification
    description: All routes related to authentification.
  - name: Projects
    description: All routes related to projects.
  - name: Members
    description: All routes related to members.
  - name: UserStories
    description: All routes related to user stories.
  - name: Tasks
    description: All routes related to tasks.
  - name: Sprints
    description: All tasks related to sprints.
  - name: Tests
    description: All tasks related to tests.
securityDefinitions:
  basicAuth:
    type: basic
paths:
  /logout:
    get:
      tags:
        - Authentification
      security:
        - basicAuth: []
      summary: End the user session.
      responses:
        '401':
          description: Not authenticated.
  /login:
    post:
      tags:
        - Authentification
      summary: ''
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Credentials
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            example:
              username: chocorion
              password: mySecretPassword
      responses:
        '405':
          description: Invalid input.
          
  /projects:
    post:
      tags:
        - Projects
      security:
        - basicAuth: []
      summary: Add a new project.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Project object
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '405':
          description: Invalid input
    get:
      tags:
        - Projects
      security:
        - basicAuth: []
      summary: Get list of projects.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: Invalid url
          
    put:
      tags:
        - Projects
      security:
        - basicAuth: []
      summary: Updating existing project.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Project object
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        '401':
          description: Not Authenticated.
          
  '/projects/{id}':
    get:
      tags:
        - Projects
      security:
        - basicAuth: []
      summary: Get a specific project.
      parameters:
        - in: path
          name: id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        '401':
          description: Not authenticated.
    
    delete:
      tags:
        - Projects
      security:
        - basicAuth: []
      summary: Delete a specific project.
      parameters:
        - in: path
          name: id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
    
  '/projects/{project_id}/us/':
    get:
      tags:
        - UserStories
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/US'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - UserStories
      security:
        - basicAuth: []
      summary: Add a new user stories.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: body
          name: body
          description: User story object
          required: true
          schema:
            $ref: '#/definitions/US'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/US'
        '405':
          description: Invalid input
          
  '/projects/{project_id}/us/{us_id}':
    get:
      tags:
        - UserStories
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: us_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/US'
        '401':
          description: Not authenticated.
          
    put:
      tags:
        - UserStories
      security:
        - basicAuth: []
      summary: Updating existing user story.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: path
          name: us_id
          required: true
          type: number
          
        - in: body
          name: body
          description: User story object
          required: true
          schema:
            $ref: '#/definitions/US'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/US'
        '401':
          description: Not Authenticated.
          
    delete:
      tags:
        - UserStories
      security:
        - basicAuth: []
      summary: Delete existing user story.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: path
          name: us_id
          required: true
          type: number
      responses:
        '401':
          description: Not Authenticated.
          
  '/projects/{project_id}/tasks/':
    get:
      tags:
        - Tasks
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Add a new task.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: body
          name: body
          description: Task object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '405':
          description: Invalid input
          
  '/projects/{project_id}/tasks/{task_id}':
    get:
      tags:
        - Tasks
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Not authenticated.
          
    put:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Modify a specific task.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
        - in: body
          name: body
          description: Task object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '405':
          description: Invalid input
          
  '/projects/{project_id}/tasks/{task_id}/parents':
    get:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Return all parents task for a specific one
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Add a new parent for a task.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: path
          name: task_id
          required: true
          type: number
          
        - in: body
          name: body
          description: Task object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '405':
          description: Invalid input
          
    delete:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Delete all parents for a specific task.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: path
          name: task_id
          required: true
          type: number
          
      responses:
        '405':
          description: Invalid input
    
  '/projects/{project_id}/tasks/{task_id}/parents/{parent_id}':      
    delete:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Delete a parent for a specific task.
      consumes:
        - application/json
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
          
        - in: path
          name: task_id
          required: true
          type: number
          
        - in: path
          name: parent_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '405':
          description: Invalid input
          
  '/projects/{project_id}/tasks/{task_id}/us/{usId}':
    get:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Return all user stories related to a specific task.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
        - in: path
          name: usId
          required: true
          type: number
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/US'
        '401':
          description: Not authenticated.
          
  '/project/{project_id}/tasks/{task_id}/children':
    get:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Return all child tasks of a specific task.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
            
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Add a child to a task.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
        - in: body
          name: body
          description: Task object
          required: true
          schema:
            $ref: '#/definitions/Task'
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
            
        '401':
          description: Not authenticated.
          
    delete:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Delete all children for a given task.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
          
  '/project/{project_id}/tasks/{task_id}/children/{child_id}':
    delete:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Delete a specific child for a given task.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
        - in: path
          name: child_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Not authenticated.
  
          
  '/projects/{project_id}/tasks/{task_id}/DOD':
    get:
      tags:
        - Tasks
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DOD'
        '401':
          description: Not authenticated.
          
    put:
      tags:
        - Tasks
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
        - in: body
          name: body
          description: DOD object
          required: true
          schema:
            $ref: '#/definitions/DOD'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DOD'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Tasks
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
        - in: body
          name: body
          description: DOD object
          required: true
          schema:
            $ref: '#/definitions/DOD'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DOD'
        '401':
          description: Not authenticated.
          
    delete:
      tags:
        - Tasks
      security:
        - basicAuth: []
      summary: Delete a DOD.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: task_id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
          

  '/projects/{project_id}/sprints/':
    get:
      tags:
        - Sprints
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sprint'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Tasks
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: body
          name: body
          description: Sprint object
          required: true
          schema:
            $ref: '#/definitions/Sprint'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sprint'
        '401':
          description: Not authenticated.
          
          
          
  '/projects/{project_id}/sprints/active':
    get:
      tags:
        - Sprints
      security:
        - basicAuth: []
      summary: Return the active sprint if exists.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sprint'
        '401':
          description: Not authenticated.
          
  '/projects/{project_id}/sprints/{sprint_id}':
    get:
      tags:
        - Sprints
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: sprint_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sprint'
        '401':
          description: Not authenticated.
          
    put:
      tags:
        - Sprints
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: sprint_id
          required: true
          type: number
        - in: body
          name: body
          description: Sprint object
          required: true
          schema:
            $ref: '#/definitions/Sprint'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sprint'
        '401':
          description: Not authenticated.
          
    delete:
      tags:
        - Sprints
      security:
        - basicAuth: []
      summary: Delete a DOD.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: sprint_id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
          
          
  '/projects/{project_id}/sprints/{sprint_id}/us':
    get:
      tags:
        - Sprints
      security:
        - basicAuth: []
      summary: Return all us planified in the current sprint.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: sprint_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/US'
        '401':
          description: Not authenticated.
          
  '/projects/{project_id}/tests/':
    get:
      tags:
        - Tests
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Test'
        '401':
          description: Not authenticated.
          
          
    post:
      tags:
        - Tests
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: body
          name: body
          description: Test object
          required: true
          schema:
            $ref: '#/definitions/Test'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Test'
        '401':
          description: Not authenticated.
          
  '/projects/{project_id}/tests/{test_id}':
    get:
      tags:
        - Tests
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: test_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Test'
        '401':
          description: Not authenticated.
          
    put:
      tags:
        - Tests
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: test_id
          required: true
          type: number
        - in: body
          name: body
          description: Test object
          required: true
          schema:
            $ref: '#/definitions/Test'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Test'
        '401':
          description: Not authenticated.
          
    delete:
      tags:
        - Tests
      security:
        - basicAuth: []
      summary: Delete a test.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: test_id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
          


  '/projects/{project_id}/members/':
    get:
      tags:
        - Members
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Member'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Members
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: body
          name: body
          description: Member object
          required: true
          schema:
            $ref: '#/definitions/Member'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Member'
        '401':
          description: Not authenticated.
          
  '/projects/{project_id}/members/{member_id}':
    get:
      tags:
        - Members
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: member_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Member'
        '401':
          description: Not authenticated.
          
          
    put:
      tags:
        - Members
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: member_id
          required: true
          type: number
        - in: body
          name: body
          description: Member object
          required: true
          schema:
            $ref: '#/definitions/Member'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Member'
        '401':
          description: Not authenticated.
          
    delete:
      tags:
        - Members
      security:
        - basicAuth: []
      summary: Delete a test.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: member_id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
          

  
'/projects/{project_id}/releases/':
    get:
      tags:
        - Realeases
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Release'
        '401':
          description: Not authenticated.
          
    post:
      tags:
        - Releases
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: body
          name: body
          description: Release object
          required: true
          schema:
            $ref: '#/definitions/Release'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Release'
        '401':
          description: Not authenticated.
          
    put:
      tags:
        - Releases
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: body
          name: body
          description: Release object
          required: true
          schema:
            $ref: '#/definitions/Release'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Release'
        '401':
          description: Not authenticated.
          
'/projects/{project_id}/releases/{release_id}':
    get:
      tags:
        - Realeases
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: release_id
          required: true
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Release'
        '401':
          description: Not authenticated.
          
    delete:
      tags:
        - Releases
      security:
        - basicAuth: []
      summary: Delete a release.
      parameters:
        - in: path
          name: project_id
          required: true
          type: number
        - in: path
          name: member_id
          required: true
          type: number
      responses:
        '401':
          description: Not authenticated.
  
definitions:
  Project:
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
        example: cdp-g1-eq1
      description:
        type: string
        example: Projet pour l'UE conduite de projet à l'université de Bordeaux.
  US:
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
        example: 'En tant qu''utilisateur, je souhaite pouvoir me connecter.'
      description:
        type: string
        example: Je souhaite avoir un bouton de connexion en haut à droite de l'application.
  
  DOD:
    type: object
    properties:
      id:
        type: number
        example: 2
      projectId:
        type: number
        example: 4
      description:
        type: string
        example: 'Le bouton est visible'
      taskId:
        type: number
        example: 3
      state:
        type: boolean
        example: true
  
  Test:
    type: object
    properties:
      id:
        type: number
        example: 2
      name:
        type: string
        example: 'Test unitaire 1'
      description:
        type: string
        example: 'Ce test unitaire test printHello()'
      lastExecution:
        type: string
        example: '2020-12-31'
      state:
        type: string
        enum: ['validate', 'refused', 'not executed']
      projectId:
        type: number
        example: 1
    
  
  Sprint:
    type: object
    properties:
      id:
        type: number
        example: 2
      projectId:
        type: number
        example: 3
      name:
        type: string
        example: 'Sprint 0 - Initialisation'
      state:
        type: string
        enum: ['pending', 'active', 'archived']
        example: 'pending'
  
  Version:
    type: object
    properties:
      versionMajor:
        type: number
        example: 1
      versionMinor:
        type: number
        example: 0
      versionPatch:
        type: number
        example: 2
  
  Release:
    type: object
    properties:
      project:
        type: number
        example: 1
      id:
        type: number
        example: 1
      version:
        $ref: '#/definitions/Version'
      title:
        type: string
        example: 'Première release !'
      description:
        type: string
        example: 'Ceci est la première release de notre application'
      link:
        type: string
        example: 'http://github.com/project/release-link'
      creationDate:
        type: string
        example: '2020-12-31'
      userTsories:
        type: array
        items:
          $ref: '#/definitions/US'
  
  Member:
    type: object
    properties:
      user:
        type: number
        example: 1
      project:
        type: number
        example: 3
      name:
        type: string
        example: 'moi'
      role:
        type: string
        example: 'développeur front'
      level:
        type: string
        example: 'junior'
  
  Task:
    type: object
    required:
      - projectId
      - usId
      - title
      - status
    properties:
      id:
        type: number
        example: 2
      projectId:
        type: number
        example: 3
      usId:
        type: number
        example: 1
      memberId:
        type: number
        example: 2
      title:
        type: string
        example: 'Ajouter un bouton dans la page "home"'
      duration:
        type: string
        example: '3h.h'
      status:
        type: string
        enum: ['TODO', 'DOING', 'DONE']
        example: 'TODO'
